# TODO: Look into inheritance so that the variables that represent the structure of the importer page
# eg: @checkboxSelector can be passed across differnet coffeescript files so we have
# one centralized source of those variables.

class NfgCsvImporter.AutoSaveNotification
  constructor: (@el) ->
    # Component Library
    @checkboxSelector = "input[type='checkbox']"
    @columnSelector = ".col-importer"
    @columns = @el.find @columnSelector
    @alertGrowlClass = "alert-growl"

    # Elements
    @checkboxes = @columns.find @checkboxSelector
    @selects = @columns.find "select"

    # Autosave HTML
    @html = """
            <div class='alert alert-success #{@alertGrowlClass}' role='alert'>
              Saving Settings
              <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
              <span class="sr-only">Saving...</span>
            </div>
           """

    # Actions
    # On click of a checkbox, launch autosave notification
    @checkboxes.on 'click', =>
      checkbox = $(@)
      @displayAutoSave(checkbox)

    # On change of a select menu, launch autosave notification
    @selects.on 'change', =>
      select = $(@)
      @displayAutoSave(select)

  # Display Autosave
  displayAutoSave: ->
    $(@html).appendTo @el
    @animateAutoSave()

  # Make the magic happen :)
  animateAutoSave: =>
    alertGrowlElement = $(".alert-growl")
    animationEnd = "animationend webkitAnimationEnd oAnimationEnd msAnimationEnd"
    growlStep1 = "growl-step1"
    growlStep2 = "growl-step2"
    growlStep3 = "growl-step3"

    # Step 1: Introduce Growl
    alertGrowlElement.addClass(growlStep1).on animationEnd, ->

      # Step 2: Announce Autosave
      $(@).addClass(growlStep2).on animationEnd, ->

        # Step 3: End autosave notification
        $(@).addClass(growlStep3).on animationEnd, ->

          # Step 4: remove the HTML
          $(@).remove()


$(document).on 'ready', ->
  el = $("#self_importer")
  return unless el.length > 0
  inst = new NfgCsvImporter.AutoSaveNotification el
